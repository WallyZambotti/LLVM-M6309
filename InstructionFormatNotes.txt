Inst Register <- Memory

<page:8bits:optional> <opcode:8bits> <postbyte:8bits:optional>

ADD reg memory
LD
CMP

    memory :
        Memory Address (Direct page)
        Memory Address (Extended Direct)
        -- postbyte required after this point
        Memory Address Indirect (Extended Indirect)
        Indexed 0 offset
        Indexed 5 bit offset
        Indexed 8 bit offset
        Indexed 16 bit offset
        Indexed Reg 8 bit offset
        Indexed Reg 16 bit offset
        Indexed Post Increment by 1
        Indexed Post Increment by 2
        Indexed Pre Decrement by 1
        Indexed Pre Decrement by 2
        Indexed Indirect 0 offset
        Indexed Indirect 8 bit offset
        Indexed Indirect 16 bit offset
        Indexed Indirect Reg 8 bit offset
        Indexed Indirect Reg 16 bit offset
        Indexed Indirect Post Increment by 2
        Indexed Indirect Pre Decrement by 2
 
Inst Register <- Immediate

<page:8bits:optional> <opcode:8bits> 

ADD reg immediate
LD
CMP

    Immediate
        Immediate 8 bit
        Immediate 16 bit
        Immediate 32 bit

Inst Register <- Register

<page:8bits:optional> <opcode:8bits> <regbyte:8bits>

ADD reg reg
OR
AND
TFR
PUSH
PULL

Inst Register

<page:8bits:optional> <opcode:8bits>

DEC reg
INC
TST
ALL Shifts

Inst Relative Address

<page:8bits:optional> <opcode:8bits> 

BRANCHES label
